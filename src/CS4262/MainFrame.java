package CS4262;

import CS4262.Core.DownloadInitializer;
import CS4262.Core.SearchInitializer;
import CS4262.Helpers.UICreator;
import CS4262.Models.Node;
import CS4262.Network.BSConnector;
import java.awt.Color;

import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lahiru Kaushalya
 */
public class MainFrame extends javax.swing.JFrame {
    
    private final UICreator uiCreator;
    private final DefaultTableModel tableModel;
    
    private static MainFrame instance;
    private BSConnector bsConnector;
    
    public static MainFrame getInstance() {
        if(instance == null){
            MainFrame.instance = new MainFrame();
        }
        return instance;
    }
    
    private MainFrame() {
        initComponents();
        
        this.setResizable(false);
        this.setTitle("  Distributed file system");
        //Set frame position
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize(); 
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        
        unregBtn.setEnabled(false);
        this.uiCreator = new UICreator();
        this.tableModel = (DefaultTableModel)searchResultsTable.getModel();
        
        setDefaultText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainTab = new javax.swing.JTabbedPane();
        homeTab = new javax.swing.JTabbedPane();
        connectionPanel = new javax.swing.JPanel();
        ipLbl = new javax.swing.JLabel();
        portLabel = new javax.swing.JLabel();
        ipTextField = new javax.swing.JTextField();
        portTextField = new javax.swing.JTextField();
        regtBtn = new javax.swing.JButton();
        connectScrollPane = new javax.swing.JScrollPane();
        connectTextPane = new javax.swing.JTextPane();
        bsServerIPLbl = new javax.swing.JLabel();
        bsServerIPTextField = new javax.swing.JTextField();
        unregBtn = new javax.swing.JButton();
        icon = new javax.swing.JLabel();
        detailsPanel = new javax.swing.JPanel();
        detailsScrollPane = new javax.swing.JScrollPane();
        details_contentTextPane = new javax.swing.JTextPane();
        details_nodeDetailsLbl = new javax.swing.JLabel();
        details_nodeConentLbl = new javax.swing.JLabel();
        details_idLbl = new javax.swing.JLabel();
        details_idDisplayLbl = new javax.swing.JLabel();
        details_ipDisplayLbl = new javax.swing.JLabel();
        details_ipLbl = new javax.swing.JLabel();
        details_portLbl = new javax.swing.JLabel();
        details_portDisplayLbl = new javax.swing.JLabel();
        details_successorLbl = new javax.swing.JLabel();
        details_succidDisplayLbl = new javax.swing.JLabel();
        details_succidLbl = new javax.swing.JLabel();
        details_succipLbl = new javax.swing.JLabel();
        details_succipDisplayLbl = new javax.swing.JLabel();
        details_succportDisplayLbl = new javax.swing.JLabel();
        details_succportLbl = new javax.swing.JLabel();
        details_successorLbl1 = new javax.swing.JLabel();
        details_succidLbl1 = new javax.swing.JLabel();
        details_preidDisplayLbl = new javax.swing.JLabel();
        details_preipLbl = new javax.swing.JLabel();
        details_preipDisplayLbl = new javax.swing.JLabel();
        details_preportLbl = new javax.swing.JLabel();
        details_preportDisplayLbl = new javax.swing.JLabel();
        routingTablePanel = new javax.swing.JPanel();
        routingScrollPane = new javax.swing.JScrollPane();
        routingTextPane = new javax.swing.JTextPane();
        indexTab = new javax.swing.JTabbedPane();
        fileIndexScrollPane = new javax.swing.JScrollPane();
        fileIndexTextPane = new javax.swing.JTextPane();
        wordIndexScrollPane = new javax.swing.JScrollPane();
        wordIndexTextPane = new javax.swing.JTextPane();
        searchPanel = new javax.swing.JPanel();
        downloadBtn = new javax.swing.JButton();
        fileNameTextField = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        downloadTextPane = new javax.swing.JTextPane();
        searchTableSP = new javax.swing.JScrollPane();
        searchResultsTable = new javax.swing.JTable();
        searchResultsLbl = new javax.swing.JLabel();
        fileDetailsLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);

        MainTab.setBackground(new java.awt.Color(204, 204, 204));
        MainTab.setTabPlacement(javax.swing.JTabbedPane.RIGHT);
        MainTab.setAutoscrolls(true);
        MainTab.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        MainTab.setOpaque(true);

        connectionPanel.setForeground(new java.awt.Color(255, 255, 255));

        ipLbl.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        ipLbl.setText("IP Address");

        portLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        portLabel.setText("Port");

        ipTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        portTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        regtBtn.setBackground(new java.awt.Color(255, 255, 255));
        regtBtn.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        regtBtn.setForeground(new java.awt.Color(0, 0, 25));
        regtBtn.setText("REGISTER");
        regtBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        regtBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        regtBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                regtBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                regtBtnMouseExited(evt);
            }
        });
        regtBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regtBtnActionPerformed(evt);
            }
        });

        connectTextPane.setEditable(false);
        connectTextPane.setBackground(new java.awt.Color(255, 255, 255));
        connectTextPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        connectTextPane.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        connectScrollPane.setViewportView(connectTextPane);

        bsServerIPLbl.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        bsServerIPLbl.setText("BS Server IP");

        bsServerIPTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        unregBtn.setBackground(new java.awt.Color(255, 255, 255));
        unregBtn.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        unregBtn.setForeground(new java.awt.Color(0, 0, 0));
        unregBtn.setText("UNREGISTER");
        unregBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        unregBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        unregBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                unregBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                unregBtnMouseExited(evt);
            }
        });
        unregBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unregBtnActionPerformed(evt);
            }
        });

        icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CS4262/Resourse/icon.jpg"))); // NOI18N

        javax.swing.GroupLayout connectionPanelLayout = new javax.swing.GroupLayout(connectionPanel);
        connectionPanel.setLayout(connectionPanelLayout);
        connectionPanelLayout.setHorizontalGroup(
            connectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, connectionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(connectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(connectScrollPane)
                    .addGroup(connectionPanelLayout.createSequentialGroup()
                        .addGap(0, 12, Short.MAX_VALUE)
                        .addComponent(icon, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(connectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bsServerIPLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ipLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(portLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(connectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(connectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(connectionPanelLayout.createSequentialGroup()
                                    .addComponent(unregBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(regtBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(portTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ipTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bsServerIPTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        connectionPanelLayout.setVerticalGroup(
            connectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, connectionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(connectScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(connectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, connectionPanelLayout.createSequentialGroup()
                        .addComponent(icon, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, connectionPanelLayout.createSequentialGroup()
                        .addGroup(connectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bsServerIPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bsServerIPLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(connectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ipLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ipTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(connectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(portLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(portTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(connectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(regtBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                            .addComponent(unregBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(15, 15, 15))))
        );

        homeTab.addTab("Connect", connectionPanel);

        details_contentTextPane.setEditable(false);
        details_contentTextPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        detailsScrollPane.setViewportView(details_contentTextPane);

        details_nodeDetailsLbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        details_nodeDetailsLbl.setText("Node Details");

        details_nodeConentLbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        details_nodeConentLbl.setText("Content");

        details_idLbl.setText("ID");

        details_idDisplayLbl.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        details_ipDisplayLbl.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        details_ipLbl.setText("IP Address");

        details_portLbl.setText("Port");

        details_portDisplayLbl.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        details_successorLbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        details_successorLbl.setText("Successor");

        details_succidDisplayLbl.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        details_succidLbl.setText("ID");

        details_succipLbl.setText("IP Address");

        details_succipDisplayLbl.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        details_succportDisplayLbl.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        details_succportLbl.setText("Port");

        details_successorLbl1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        details_successorLbl1.setText("Predessor");

        details_succidLbl1.setText("ID");

        details_preidDisplayLbl.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        details_preipLbl.setText("IP Address");

        details_preipDisplayLbl.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        details_preportLbl.setText("Port");

        details_preportDisplayLbl.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        javax.swing.GroupLayout detailsPanelLayout = new javax.swing.GroupLayout(detailsPanel);
        detailsPanel.setLayout(detailsPanelLayout);
        detailsPanelLayout.setHorizontalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(details_nodeDetailsLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                        .addGroup(detailsPanelLayout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(details_idLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(details_ipLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(details_portLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(details_ipDisplayLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(details_idDisplayLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(details_portDisplayLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(details_successorLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(details_successorLbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(details_succidLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(details_succipLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(details_succportLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(14, 14, 14)
                                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(details_succportDisplayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(details_succipDisplayLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                                        .addComponent(details_succidDisplayLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(details_succidLbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(details_preipLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14)
                                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(details_preipDisplayLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                                    .addComponent(details_preidDisplayLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsPanelLayout.createSequentialGroup()
                        .addComponent(details_preportLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(details_preportDisplayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(details_nodeConentLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                    .addComponent(detailsScrollPane))
                .addContainerGap())
        );
        detailsPanelLayout.setVerticalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(details_nodeDetailsLbl)
                    .addComponent(details_nodeConentLbl))
                .addGap(12, 12, 12)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(details_idLbl)
                            .addComponent(details_idDisplayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(details_ipDisplayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(details_ipLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(details_portDisplayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(details_portLbl))
                        .addGap(30, 30, 30)
                        .addComponent(details_successorLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(details_succidLbl)
                            .addComponent(details_succidDisplayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(details_succipDisplayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(details_succipLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(details_succportDisplayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(details_succportLbl))
                        .addGap(18, 18, 18)
                        .addComponent(details_successorLbl1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(details_succidLbl1)
                            .addComponent(details_preidDisplayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(details_preipDisplayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(details_preipLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(details_preportDisplayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(details_preportLbl)))
                    .addComponent(detailsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        homeTab.addTab("Details", detailsPanel);

        routingTextPane.setEditable(false);
        routingTextPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        routingScrollPane.setViewportView(routingTextPane);

        javax.swing.GroupLayout routingTablePanelLayout = new javax.swing.GroupLayout(routingTablePanel);
        routingTablePanel.setLayout(routingTablePanelLayout);
        routingTablePanelLayout.setHorizontalGroup(
            routingTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(routingTablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(routingScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
                .addContainerGap())
        );
        routingTablePanelLayout.setVerticalGroup(
            routingTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, routingTablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(routingScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                .addContainerGap())
        );

        homeTab.addTab("Routing Table", routingTablePanel);

        MainTab.addTab("Home", homeTab);

        fileIndexTextPane.setEditable(false);
        fileIndexTextPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        fileIndexScrollPane.setViewportView(fileIndexTextPane);

        indexTab.addTab("File Index ", fileIndexScrollPane);

        wordIndexTextPane.setEditable(false);
        wordIndexTextPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        wordIndexScrollPane.setViewportView(wordIndexTextPane);

        indexTab.addTab("Word Index", wordIndexScrollPane);

        MainTab.addTab("Index", indexTab);

        downloadBtn.setBackground(new java.awt.Color(255, 255, 255));
        downloadBtn.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        downloadBtn.setForeground(new java.awt.Color(0, 0, 25));
        downloadBtn.setText("DOWNLOAD");
        downloadBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        downloadBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        downloadBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                downloadBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                downloadBtnMouseExited(evt);
            }
        });
        downloadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadBtnActionPerformed(evt);
            }
        });

        fileNameTextField.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        searchBtn.setBackground(new java.awt.Color(255, 255, 255));
        searchBtn.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        searchBtn.setForeground(new java.awt.Color(0, 0, 25));
        searchBtn.setText("SEARCH");
        searchBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchBtnMouseExited(evt);
            }
        });
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(downloadTextPane);

        searchResultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File Name", "IP Address", "UDP Port", "TCP port"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        searchResultsTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchResultsTable.getTableHeader().setReorderingAllowed(false);
        searchTableSP.setViewportView(searchResultsTable);
        if (searchResultsTable.getColumnModel().getColumnCount() > 0) {
            searchResultsTable.getColumnModel().getColumn(1).setMinWidth(120);
            searchResultsTable.getColumnModel().getColumn(1).setPreferredWidth(120);
            searchResultsTable.getColumnModel().getColumn(1).setMaxWidth(140);
            searchResultsTable.getColumnModel().getColumn(2).setMinWidth(75);
            searchResultsTable.getColumnModel().getColumn(2).setPreferredWidth(75);
            searchResultsTable.getColumnModel().getColumn(2).setMaxWidth(75);
            searchResultsTable.getColumnModel().getColumn(3).setMinWidth(75);
            searchResultsTable.getColumnModel().getColumn(3).setPreferredWidth(75);
            searchResultsTable.getColumnModel().getColumn(3).setMaxWidth(75);
        }

        searchResultsLbl.setText("Search Results");

        fileDetailsLbl.setText("File Details");

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(searchTableSP, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(fileNameTextField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchResultsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fileDetailsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(downloadBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchResultsLbl)
                .addGap(11, 11, 11)
                .addComponent(searchTableSP, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fileDetailsLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(downloadBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        MainTab.addTab("Search", searchPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainTab)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainTab)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void regtBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regtBtnActionPerformed
        String bsipAddress = bsServerIPTextField.getText();
        String ipAddress = ipTextField.getText();
        String port = portTextField.getText();
        
        if(!bsipAddress.equals("") && !ipAddress.equals("") && !port.equals(""))
        {
            try
            {
                bsConnector = new BSConnector(bsipAddress.trim(), ipAddress.trim(), Integer.parseInt(port.trim()));
                bsConnector.register();
                unregBtn.setEnabled(true);
            }
            catch(NumberFormatException e)
            {
                JOptionPane.showMessageDialog(this, "Port value is not valid","Whoops",JOptionPane.WARNING_MESSAGE);
            }
            
        }
        else{
            JOptionPane.showMessageDialog(this,"Incomplete information"); 
        }
    }//GEN-LAST:event_regtBtnActionPerformed

    //Button mouse events 
    private void unregBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unregBtnActionPerformed
        bsConnector.unregister();
    }//GEN-LAST:event_unregBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        //Reset previous search results
        clearPreResults();
        
        String fileName = fileNameTextField.getText();
        if(!fileName.equals("")){
            SearchInitializer.getInstance().localSearch(fileName);
        }
        else{
            JOptionPane.showMessageDialog(this,"Incomplete information");
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void downloadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadBtnActionPerformed
        int index = searchResultsTable.getSelectedRow();
        if(index != -1){
            String fileName = (String)tableModel.getValueAt(index, 0);
            String ipAddress = (String)tableModel.getValueAt(index, 1);
            int udpPort = (int)tableModel.getValueAt(index, 2);
            try {
                DownloadInitializer.getInstance().downloadFile(ipAddress, udpPort, fileName);
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            JOptionPane.showMessageDialog(this,"Select file for download");
        }
    }//GEN-LAST:event_downloadBtnActionPerformed

    private void searchBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchBtnMouseEntered
        searchBtn.setFont(new Font("Calibri", Font.BOLD, 13));
        searchBtn.setBackground(new Color(225,225,225));
    }//GEN-LAST:event_searchBtnMouseEntered

    private void searchBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchBtnMouseExited
        searchBtn.setFont(new Font("Calibri", Font.BOLD, 12));
        searchBtn.setBackground(Color.WHITE);
    }//GEN-LAST:event_searchBtnMouseExited

    private void downloadBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_downloadBtnMouseEntered
        downloadBtn.setFont(new Font("Calibri", Font.BOLD, 13));
        downloadBtn.setBackground(new Color(225,225,225));
    }//GEN-LAST:event_downloadBtnMouseEntered

    private void downloadBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_downloadBtnMouseExited
        downloadBtn.setFont(new Font("Calibri", Font.BOLD, 12));
        downloadBtn.setBackground(Color.WHITE);
    }//GEN-LAST:event_downloadBtnMouseExited

    private void regtBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regtBtnMouseEntered
        regtBtn.setFont(new Font("Calibri", Font.BOLD, 13));
        regtBtn.setBackground(new Color(225,225,225));
    }//GEN-LAST:event_regtBtnMouseEntered

    private void regtBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regtBtnMouseExited
        regtBtn.setFont(new Font("Calibri", Font.BOLD, 12));
        regtBtn.setBackground(Color.WHITE);
    }//GEN-LAST:event_regtBtnMouseExited

    private void unregBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unregBtnMouseEntered
        unregBtn.setFont(new Font("Calibri", Font.BOLD, 13));
        unregBtn.setBackground(new Color(225,225,225));
    }//GEN-LAST:event_unregBtnMouseEntered

    private void unregBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unregBtnMouseExited
        unregBtn.setFont(new Font("Calibri", Font.BOLD, 12));
        unregBtn.setBackground(Color.WHITE);
    }//GEN-LAST:event_unregBtnMouseExited
    
    private void setDefaultText(){
        details_contentTextPane.setText(uiCreator.getContentHeader());
        routingTextPane.setText(uiCreator.getRoutingHeader());
        fileIndexTextPane.setText(uiCreator.getFileIndexHeader());
        wordIndexTextPane.setText(uiCreator.getWordIndexHeader());
    }
    
    private void clearPreResults(){
        while(tableModel.getRowCount() > 0){
            tableModel.removeRow(tableModel.getRowCount()-1);
        }
    }
    
    public void updateConnctionResponce(String responce){
        connectTextPane.setText(responce);
    }
    
    public void updateNodeDetails(Node node){
        details_idDisplayLbl.setText(node.getId());
        details_ipDisplayLbl.setText(node.getipAdress());
        details_portDisplayLbl.setText(String.valueOf(node.getUdpPort()));
    }
    
    public void updateRoutingTable(String data){
        routingTextPane.setText(data);
    }
    
    public void updateContent(String content){
        details_contentTextPane.setText(content);
    }
    
    public void updateSuccessorDetails(Node successor){
        if(successor != null){
            details_succidDisplayLbl.setText(successor.getId());
            details_succipDisplayLbl.setText(successor.getipAdress());
            details_succportDisplayLbl.setText(String.valueOf(successor.getUdpPort()));
        }
        else{
            details_succidDisplayLbl.setText("");
            details_succipDisplayLbl.setText("");
            details_succportDisplayLbl.setText("");
        }
    }
    
    public void updatePredecessorDetails(Node predecessor){
        if(predecessor != null){
            details_preidDisplayLbl.setText(predecessor.getId());
            details_preipDisplayLbl.setText(predecessor.getipAdress());
            details_preportDisplayLbl.setText(String.valueOf(predecessor.getUdpPort()));
        }
        else{
            details_preidDisplayLbl.setText("");
            details_preipDisplayLbl.setText("");
            details_preportDisplayLbl.setText("");
        }
    }
    
    public void updateFileIndex(String data){
        fileIndexTextPane.setText(data);
    }
    
    public void updateWordIndex(String data){
        wordIndexTextPane.setText(data);
    }
    
    public void updateSearchResponse(Object[][] data){
        //Reset previous search results
        clearPreResults();
        //Display new results
        for(Object[] row : data){
            tableModel.addRow(row);
        }
    }
    
    public void displayFileContent(String data){
        downloadTextPane.setText(data);
    }
    
    public void displayError(String errMsg){
        JOptionPane.showMessageDialog(this, errMsg, "Alert", JOptionPane.WARNING_MESSAGE);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane MainTab;
    private javax.swing.JLabel bsServerIPLbl;
    private javax.swing.JTextField bsServerIPTextField;
    private javax.swing.JScrollPane connectScrollPane;
    private javax.swing.JTextPane connectTextPane;
    private javax.swing.JPanel connectionPanel;
    private javax.swing.JPanel detailsPanel;
    private javax.swing.JScrollPane detailsScrollPane;
    private javax.swing.JTextPane details_contentTextPane;
    private javax.swing.JLabel details_idDisplayLbl;
    private javax.swing.JLabel details_idLbl;
    private javax.swing.JLabel details_ipDisplayLbl;
    private javax.swing.JLabel details_ipLbl;
    private javax.swing.JLabel details_nodeConentLbl;
    private javax.swing.JLabel details_nodeDetailsLbl;
    private javax.swing.JLabel details_portDisplayLbl;
    private javax.swing.JLabel details_portLbl;
    private javax.swing.JLabel details_preidDisplayLbl;
    private javax.swing.JLabel details_preipDisplayLbl;
    private javax.swing.JLabel details_preipLbl;
    private javax.swing.JLabel details_preportDisplayLbl;
    private javax.swing.JLabel details_preportLbl;
    private javax.swing.JLabel details_successorLbl;
    private javax.swing.JLabel details_successorLbl1;
    private javax.swing.JLabel details_succidDisplayLbl;
    private javax.swing.JLabel details_succidLbl;
    private javax.swing.JLabel details_succidLbl1;
    private javax.swing.JLabel details_succipDisplayLbl;
    private javax.swing.JLabel details_succipLbl;
    private javax.swing.JLabel details_succportDisplayLbl;
    private javax.swing.JLabel details_succportLbl;
    private javax.swing.JButton downloadBtn;
    private javax.swing.JTextPane downloadTextPane;
    private javax.swing.JLabel fileDetailsLbl;
    private javax.swing.JScrollPane fileIndexScrollPane;
    private javax.swing.JTextPane fileIndexTextPane;
    private javax.swing.JTextField fileNameTextField;
    private javax.swing.JTabbedPane homeTab;
    private javax.swing.JLabel icon;
    private javax.swing.JTabbedPane indexTab;
    private javax.swing.JLabel ipLbl;
    private javax.swing.JTextField ipTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel portLabel;
    private javax.swing.JTextField portTextField;
    private javax.swing.JButton regtBtn;
    private javax.swing.JScrollPane routingScrollPane;
    private javax.swing.JPanel routingTablePanel;
    private javax.swing.JTextPane routingTextPane;
    private javax.swing.JButton searchBtn;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JLabel searchResultsLbl;
    private javax.swing.JTable searchResultsTable;
    private javax.swing.JScrollPane searchTableSP;
    private javax.swing.JButton unregBtn;
    private javax.swing.JScrollPane wordIndexScrollPane;
    private javax.swing.JTextPane wordIndexTextPane;
    // End of variables declaration//GEN-END:variables
}
